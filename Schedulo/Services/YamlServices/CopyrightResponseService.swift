//
//  CopyrightService.swift
//  Schedulo
//
//  Created by Viktor Zavhorodnii on 04/06/2025.
//

import OpenAPIRuntime
import OpenAPIURLSession

typealias CopyrightResponse = Components.Schemas.CopyrightResponse

protocol CopyrightResponseServiceProtocol {
    func getCopyrightResponse(format: String) async throws -> CopyrightResponse
}

/// Service provides wrapper over the autogenerated OpenAPI client for the "getCopyrightData" method
final class CopyrightResponseService: CopyrightResponseServiceProtocol {
    private let client: Client
    private let apikey: String
    
    init(client: Client, apikey: String) {
        self.client = client
        self.apikey = apikey
    }
    
    /// Retrieves a copyright of a YandexRasp. Data must be presented near the schedules
    /// - Parameter format: answer format ( "json" or "xml" )
    /// - Returns: copyright data
    func getCopyrightResponse(format: String) async throws -> CopyrightResponse {
        let response = try await client.getCopyrightData(query: .init(
            apikey: apikey,
            format: format
        ))
        
        return try response.ok.body.json
    }
}

/// Func for test API call "getCopyrightData" method
func testFetchCopyrightData() {
    Task {
        do {
            let client = Client(
                serverURL: try Servers.Server1.url(),
                transport: URLSessionTransport()
            )
            
            let service = CopyrightResponseService(
                client: client,
                apikey: "3c35e80c-ee35-4151-9e13-348cf777ab10"
            )
            
            print("Fetching copyright response...")
            let response = try await service.getCopyrightResponse(
                format: "json"
            )
            
            print("Successfully fetched copyright response: \(response)")
        } catch {
            print("Error fetching copyright response: \(error)")
        }
    }
}
